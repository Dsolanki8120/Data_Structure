// Function to delete a node from BST.

// Find Succesor element of root
    Node*succesor(Node*curr)
    {
        curr=curr->right;
        while(curr!=NULL && curr->left!=NULL)
             curr=curr->left;
             
        return curr;
    }

Node *deleteNode(Node *root, int X) {
      
        
        if(root==NULL)
        return root;
        
        if(root->data>X)
        root->left=deleteNode(root->left,X);
        else if(root->data<X)
        root->right=deleteNode(root->right,X);
        else
        {
            if(root->left==NULL)
            {
                Node*temp=root->right;
                delete root;
                return temp;
            }
            
            if(root->right==NULL)
            {
                Node*temp=root->left;
                delete root;
                return temp;
            }
            
            Node*succ= succesor(root);
            root->data= succ->data;
            root->right=deleteNode(root->right,succ->data);
        }
        
        return root;
    }


int main()
{
Node*root= new Node(10);
root->left= new Node(5);
root->right= new Node(15);
root->right->left= new Node(12);
root->right->right=new Node(18);
root=deleteNode(root,x);
return 0;
}
